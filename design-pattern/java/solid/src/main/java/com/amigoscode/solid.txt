SOLID

* Single responsibility
Each class shuld have only one sole purpose, and not be filled with excessive functionality

* Open Closes
Classes should be open for extension, closed for modification.
In other words, you should not have to rewriter an existing class for implementing new features

* Liskov Substitution
This means that every subclass or derived class should be substitutable for their base or parent class

* Interfaces Segregation
Interfaces should not force clases to implement what they can't do.
Large interfaces should be divided into small ones.

* Dependency Inversion
Components should depend on abstractions not on concretions